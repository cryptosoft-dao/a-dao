#include "imports/stdlib.fc";

const int op::deploy_root;

global int root_index;

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure inline {

    if (in_msg_body.slice_empty?()) {
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    slice sender_address = cs~load_msg_addr();

    if (flags & 1) {  ;; ignore bounced messages
        return ();
    }

    int op = in_msg_body~load_uint(32);

    load_data();

    if (op == op::deploy_root) {

        int max_authorized_wallets = in_msg_body~load_uint(8);
        int transaction_approval_percent = in_msg_body~load_uint(8);
        int wallet1_addr = in_msg_body~load_msg_addr();

        cell msg = begin_cell()
            .store_uint(0x18, 6)
            .store_slice(to)
            .store_coins(amount)
            .store_uint(7, 108)
            .store_ref(state_init)
            .store_ref(
                begin_cell()
                .end_cell()
            )
        .end_cell();

        send_raw_message(msg, 0);

    }

}